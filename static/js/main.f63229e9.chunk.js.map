{"version":3,"sources":["store/player/types.ts","store/player/actions.ts","store/visualizer/types.ts","utils/CanvasUtil.ts","components/molecules/Visualizer.tsx","containers/Visualizer.tsx","store/visualizer/actions.ts","components/atoms/VolumeSlider.tsx","components/atoms/PlayButton.tsx","components/atoms/PauseButton.tsx","components/molecules/Header.tsx","containers/Header.tsx","App.tsx","store/player/reducers.ts","const.ts","store/visualizer/reducers.ts","store/index.ts","serviceWorker.ts","materialui/theme.ts","index.tsx"],"names":["PlayerActionType","VisualizerActionType","changeVolume","volume","type","CHANGE_VOLUME","play","PLAY","CanvasUtil","canvas","ctx","this","getContext","bufferLength","clearRect","width","height","beginPath","fillStyle","index","length","fillRect","save","angleStep","Math","PI","dist","angle","x1","cos","y1","sin","x","y","moveTo","lineTo","lineWidth","strokeStyle","closePath","stroke","useStyles","makeStyles","container","canvasContainer","position","top","left","playButton","right","bottom","margin","borderRadius","fontSize","file","display","Visualizer","analyser","isPlay","mode","setMusic","classes","inputRef","useRef","useState","Object","canvasUtil","setCanvasUtil","isViewFileButton","setIsViewFileButton","isViewCanvas","setIsViewCanvas","render","useCallback","AnalyserNode","Uint8Array","frequencyBinCount","getByteFrequencyData","drawBarVisualizer","drawCircleVisualizer","requestAnimationFrame","useEffect","document","getElementById","clientWidth","clientHeight","className","Fade","in","timeout","Button","variant","color","onClick","fileInput","click","id","onChange","e","match","audioCtx","AudioContext","fileReader","FileReader","readAsArrayBuffer","onload","result","ArrayBuffer","decodeAudioData","buffer","loadFile","target","files","connect","state","music","player","visualizer","dispatch","SET_MUSIC","root","paddingTop","VolumeSlider","React","value","setValue","Grid","spacing","item","xs","Slider","min","step","max","event","newValue","isNumber","aria-labelledby","PlayButton","handlePlayButton","IconButton","PauseButton","handlePauseButton","Header","open","modeList","changeMode","pause","isOpen","setIsOpen","handleModeButton","_mode","style","zIndex","Drawer","anchor","onClose","key","direction","justify","alignItems","Breadcrumbs","aria-label","map","selectedMode","modeButton","CHANGE_MODE","PAUSE","App","CssBaseline","initialState","undefined","gainNode","isFinishLoading","isInitiallPaly","playerReducer","action","stop","source","createBufferSource","createAnalyser","fftSize","createGain","gain","destination","node","start","resume","STOP","suspend","visualizerReducer","rootReducer","combineReducers","Boolean","window","location","hostname","theme","createMuiTheme","palette","background","default","secondary","light","main","dark","contrastText","store","createStore","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6KAAYA,E,oFAAAA,K,6BAAAA,E,qCAAAA,E,mBAAAA,E,mBAAAA,E,sBAAAA,M,KCEL,ICFKC,EDWCC,EAAe,SAACC,GAAD,MAAmC,CAC7DA,SACAC,KAAMJ,EAAiBK,gBAGZC,EAAO,iBAAqB,CACvCF,KAAMJ,EAAiBO,O,kDEjBZC,EAAb,WASE,WAAYC,GAAc,yBAR1BA,YAQyB,OANzBC,SAMyB,EACvBC,KAAKF,OAASA,EACdE,KAAKD,IAAMD,EAAOG,WAAW,MAXjC,8DAkBoBC,GAChBF,KAAKD,IAAII,UAAU,EAAG,EAAGH,KAAKF,OAAOM,MAAOJ,KAAKF,OAAOO,QACxDL,KAAKD,IAAIO,YACTN,KAAKD,IAAIQ,UAAY,UACrB,IAAK,IAAIC,EAAQ,EAAGA,EAAQN,EAAaO,OAAQD,GAAS,EACxDR,KAAKD,IAAIW,SACPF,GAASR,KAAKF,OAAOM,MAAQF,EAAaO,QAC1CT,KAAKF,OAAOO,OAASH,EAAaM,GAClCR,KAAKF,OAAOM,MAAQF,EAAaO,OAAS,EAC1CP,EAAaM,IAGjBR,KAAKD,IAAIY,SA9Bb,2CAqCuBT,GACnB,IAAMU,EAAuB,EAAVC,KAAKC,GAAUZ,EAAaO,OAE/CT,KAAKD,IAAII,UAAU,EAAG,EAAGH,KAAKF,OAAOM,MAAOJ,KAAKF,OAAOO,QACxDL,KAAKD,IAAIO,YAKT,IAFA,IAESE,EAAQ,EAAGA,EAAQN,EAAaO,OAAQD,GAAS,EAAG,CAC3D,IAAMO,EAAOb,EAAaM,GAHb,IAG+B,EACtCQ,EAAQJ,EAAYJ,EAAQ,IAC5BS,EAAKjB,KAAKF,OAAOM,MAAQ,EALlB,IAK+BS,KAAKK,IAAIF,GAC/CG,EAAKnB,KAAKF,OAAOO,OAAS,EANnB,IAMgCQ,KAAKO,IAAIJ,GAChDK,EAAIrB,KAAKF,OAAOM,MAAQ,EAAIW,EAAOF,KAAKK,IAAIF,GAC5CM,EAAItB,KAAKF,OAAOO,OAAS,EAAIU,EAAOF,KAAKO,IAAIJ,GACnDhB,KAAKD,IAAIwB,OAAON,EAAIE,GACpBnB,KAAKD,IAAIyB,OAAOH,EAAGC,GACnBtB,KAAKD,IAAI0B,UAAY,EACrBzB,KAAKD,IAAI2B,YAAc,UACvB1B,KAAKD,IAAI4B,YAGX3B,KAAKD,IAAI6B,aA5Db,KCiBMC,EAAYC,aAAW,iBAAO,CAClCC,UAAW,CACT3B,MAAO,OACPC,OAAQ,SAEV2B,gBAAiB,CACfC,SAAU,WACV7B,MAAO,OACPC,OAAQ,QAEVP,OAAQ,CACNmC,SAAU,WACV7B,MAAO,OACPC,OAAQ,OACR6B,IAAK,EACLC,KAAM,GAERC,WAAY,CACVH,SAAU,WACVC,IAAK,EACLG,MAAO,EACPC,OAAQ,EACRH,KAAM,EACNI,OAAQ,OACRnC,MAAO,QACPC,OAAQ,QACRmC,aAAc,OACdC,SAAU,OAEZC,KAAM,CACJC,QAAS,YA4HEC,EAxHyB,SAAC,GAMlC,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,KAGI,IAFJC,gBAEI,MAFO,aAEP,MADJrD,YACI,MADG,aACH,EACEsD,EAAUpB,IAEVqB,EAAWC,mBAHb,EAKgCC,mBAASC,QALzC,mBAKGC,EALH,KAKeC,EALf,OAM4CH,oBAAS,WAGvD,OAFqB,KAPnB,mBAMGI,EANH,KAMqBC,EANrB,OAYoCL,oBAAS,WAG/C,OAFqB,KAbnB,mBAYGM,EAZH,KAYiBC,EAZjB,KAoDEC,EAASC,uBAAY,WACzB,GAAMhB,aAAoBiB,aAA1B,CACA,IAAM5D,EAAe,IAAI6D,WAAWlB,EAASmB,mBAE7C,OADAnB,EAASoB,qBAAqB/D,GACtB6C,GACN,IAAK,MACHO,EAAWY,kBAAkBhE,GAC7B,MACF,IAAK,SACHoD,EAAWa,qBAAqBjE,GAKpCkE,sBAAsBR,MACrB,CAACf,EAAUS,EAAYP,IAiB1B,OAdAsB,qBAAU,WACR,IAAMtC,EAAYuC,SAASC,eAAe,mBACpCzE,EAAcwE,SAASC,eAAe,UAC5CzE,EAAOM,MAAP,OAAe2B,QAAf,IAAeA,OAAf,EAAeA,EAAWyC,YAC1B1E,EAAOO,OAAP,OAAgB0B,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAW0C,aAC3BlB,EAAc,IAAI1D,EAAWC,MAC5B,CAACoD,EAAUH,IAEdsB,qBAAU,WACJvB,GACFsB,sBAAsBR,KAEvB,CAACd,EAAQc,IAGV,yBAAKc,UAAWzB,EAAQlB,WACtB,kBAAC4C,EAAA,EAAD,CAAMC,GAAIpB,EAAkBqB,QAAS,KACnC,kBAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAM,UACNN,UAAWzB,EAAQb,WACnB6C,QA7Ce,WACrB,IAAMC,EAAYZ,SAASC,eAAe,aACxB,OAAdW,GACJA,EAAUC,UAsCN,QAOE,2BACEC,GAAG,YACHV,UAAWzB,EAAQP,KACnBjD,KAAK,OACL4F,SAAU,SAAAC,GAAC,OA5EJ,SAAC5C,GAChB,GAAKA,GACAA,EAAKjD,KAAK8F,MAAM,WAArB,CACA9B,GAAoB,GACpBE,GAAgB,GAEhB,IAAM6B,EAAW,IAAIC,aAEfC,EAAa,IAAIC,WACvBD,EAAWE,kBAAkBlD,GAE7BgD,EAAWG,OAAS,WACdH,EAAWI,kBAAkBC,aAC/BP,EAASQ,gBAAgBN,EAAWI,QAAQ,SAAAG,GAC1CjD,EAASiD,EAAQT,GACjB7F,SA8DIuG,CAA4B,OAAnBZ,EAAEa,OAAOC,MAAiBd,EAAEa,OAAOC,MAAM,GAAK,WAM/D,kBAACzB,EAAA,EAAD,CAAMC,GAAIlB,EAAcmB,QAAS,KAC/B,yBAAKO,GAAG,kBAAkBV,UAAWzB,EAAQjB,iBAC3C,4BAAQoD,GAAG,SAASV,UAAWzB,EAAQnD,aCxHlCuG,eAbS,SAACC,GAAD,MAAmC,CACzDC,MAAOD,EAAME,OAAOD,MACpB1D,SAAUyD,EAAME,OAAO3D,SACvBC,OAAQwD,EAAME,OAAO1D,OACrBC,KAAMuD,EAAMG,WAAW1D,SAGE,SAAC2D,GAAD,MAAwC,CACjE1D,SAAU,SAACiD,EAAQT,GAAT,OAAsBkB,EJrCV,SACtBT,EACAT,GAFsB,MAGJ,CAClBS,SACAT,WACA/F,KAAMJ,EAAiBsH,WI+BkB3D,CAASiD,EAAQT,KAC1DjG,aAAc,SAAAC,GAAM,OAAIkH,EAASnH,EAAaC,KAC9CG,KAAM,kBAAM+G,EAAS/G,SAGR0G,CAA6CzD,I,SH5ChDtD,K,sCAAAA,M,KIEL,I,8ECODuC,EAAYC,aAAW,iBAAO,CAClC8E,KAAM,CACJxG,MAAO,IACPyG,WAAY,OA2CDC,EAnC6B,SAAC,GAAsB,IAApBvH,EAAmB,EAAnBA,aACvC0D,EAAUpB,IADgD,EAEtCkF,IAAM3D,SAAiB,GAFe,mBAEzD4D,EAFyD,KAElDC,EAFkD,KAUhE,OACE,yBAAKvC,UAAWzB,EAAQ2D,MACtB,kBAACM,EAAA,EAAD,CAAMnF,WAAS,EAACoF,QAAS,GACvB,kBAACD,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC,IAAD,OAEF,kBAACF,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CACEN,MAAOA,EACPO,IAAK,EACLC,KAAM,IACNC,IAAK,EACLpC,SAlBW,SAACqC,EAAYC,GAC3BC,mBAASD,KACdV,EAASU,GACTpI,EAAaoI,KAgBL3C,MAAM,YACN6C,kBAAgB,uBAGpB,kBAACX,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC,IAAD,U,0BC/BKU,EARyB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACzC,OACE,kBAACC,EAAA,EAAD,CAAY/C,QAAS8C,EAAkB/C,MAAM,WAC3C,kBAAC,IAAD,Q,iBCKSiD,EAR2B,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAC3C,OACE,kBAACF,EAAA,EAAD,CAAY/C,QAASiD,EAAmBlD,MAAM,WAC5C,kBAAC,IAAD,QCAAnD,EAAYC,aAAW,iBAAO,CAClC8E,KAAM,CACJ3E,SAAU,gBAwHCkG,EA1GiB,SAAC,GAQ1B,IAiBiBC,EAxBtBrF,EAOI,EAPJA,KACAsF,EAMI,EANJA,SACAvF,EAKI,EALJA,OAKI,IAJJwF,kBAII,MAJS,aAIT,MAHJ/I,oBAGI,MAHW,aAGX,MAFJI,YAEI,MAFG,aAEH,MADJ4I,aACI,MADI,aACJ,IACwBnF,oBAAS,WAGnC,OAFqB,KAFnB,mBACGoF,EADH,KACWC,EADX,KAOExF,EAAUpB,IAEV6G,EAAmB,SAACC,GACxBL,EAAWK,IA2Cb,OACE,yBAAKjE,UAAWzB,EAAQ2D,KAAMgC,MAAO,CAAEC,OAAQ,OAC7C,kBAAC/D,EAAA,EAAD,CAAQG,QA1CK,WACfwD,GAAU,KAyCR,QAEA,kBAACK,EAAA,EAAD,CAAQC,OAAO,MAAMX,KAAMI,EAAQQ,SAxCjBZ,GAwCuC,EAxCrB,SACtCV,IAGiB,YAAfA,EAAMjI,MACkC,QAAtCiI,EAA8BuB,KACS,UAAtCvB,EAA8BuB,MAKnCR,EAAUL,MA8BN,kBAAClB,EAAA,EAAD,CACEnF,WAAS,EACTmH,UAAU,MACVC,QAAQ,aACRC,WAAW,UAEX,kBAAClC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACgC,EAAA,EAAD,CAAaC,aAAW,cACrBjB,EAASkB,KAAI,SAAAZ,GAAK,OACjB,yBAAKM,IAAKN,GAhCL,SAACA,EAAea,GAAhB,OACjB,6BACGb,IAAUa,EACT,kBAAC1E,EAAA,EAAD,CAAQmE,IAAKN,EAAO1D,QAAS,kBAAMyD,EAAiBC,KACjDA,GAGH,kBAAC7D,EAAA,EAAD,CACEmE,IAAKN,EACL1D,QAAS,kBAAMyD,EAAiBC,IAChC3D,MAAM,WAEL2D,IAoBuBc,CAAWd,EAAO5F,SAK1C,kBAACmE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACH,EAAA,EAAD,CACEnF,WAAS,EACTmH,UAAU,MACVC,QAAQ,WACRC,WAAW,SACXjC,QAAS,GAET,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZvE,EACC,kBAAC,EAAD,CAAaoF,kBAAmBK,IAEhC,kBAAC,EAAD,CAAYR,iBAAkBpI,KAGlC,kBAACuH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CAAc9H,aAAcA,WC9E7B8G,eAbS,SAACC,GAAD,MAAmC,CACzDvD,KAAMuD,EAAMG,WAAW1D,KACvBsF,SAAU/B,EAAMG,WAAW4B,SAC3BvF,OAAQwD,EAAME,OAAO1D,WAGI,SAAC4D,GAAD,MAAwC,CACjE4B,WAAY,SAAAvF,GAAI,OAAI2D,ELtCI,SAAC3D,GAAD,MAAqC,CAC7DA,OACAtD,KAAMH,EAAqBoK,aKoCEpB,CAAWvF,KACxCxD,aAAc,SAAAC,GAAM,OAAIkH,EAASnH,EAAaC,KAC9CG,KAAM,kBAAM+G,EAAS/G,MACrB4I,MAAO,kBAAM7B,EVnB2B,CACxCjH,KAAMJ,EAAiBsK,YUqBVtD,CAA6C8B,GC3B7CyB,EAdH,WACV,OACE,6BACE,kBAACC,EAAA,EAAD,MACA,gCACE,kBAAC,EAAD,OAEF,8BACE,kBAAC,EAAD,S,QCTKC,EAA4B,CACvCtE,cAAUuE,EACVxD,WAAOwD,EACPlH,cAAUkH,EACVC,cAAUD,EACVE,iBAAiB,EACjBC,gBAAgB,EAChBpH,QAAQ,EACRtD,OAAQ,GA2GK2K,EAxG2C,WAGvC,IAFjB7D,EAEgB,uDAFKwD,EACrBM,EACgB,uCAChB,OAAQA,EAAO3K,MACb,KAAKJ,EAAiBsH,UACpB,QAAwBoD,IAApBK,EAAO5E,SAAwB,OAAOc,EAC1C,QAAsByD,IAAlBK,EAAOnE,OAAsB,OAAOK,OACpByD,IAAhBzD,EAAMC,OAERD,EAAMC,MAAM8D,OAId,IAAMC,EAASF,EAAO5E,SAAS+E,qBAC/BD,EAAOrE,OAASmE,EAAOnE,OAGvB,IAAMpD,EAAWuH,EAAO5E,SAASgF,iBACjC3H,EAAS4H,QClCS,IDmClBH,EAAOjE,QAAQxD,GAIf,IAAMmH,EAAWI,EAAO5E,SAASkF,aAMjC,OAJAV,EAASW,KAAK3D,MAAQV,EAAM9G,OAC5B8K,EAAOjE,QAAQ2D,GACfA,EAAS3D,QAAQ+D,EAAO5E,SAASoF,aAE1B,eACFtE,EADL,CAEEd,SAAU4E,EAAO5E,SACjBe,MAAO+D,EACPzH,WACAmH,WACAlH,QAAQ,EACRmH,iBAAiB,EACjBC,gBAAgB,IAIpB,KAAK7K,EAAiBK,cACpB,QAAuBqK,IAAnBzD,EAAM0D,SAAwB,OAAO1D,EACzC,QAAsByD,IAAlBK,EAAO5K,OAAsB,OAAO8G,EAExC,IAAMuE,EAAOvE,EAAM0D,SAGnB,OAFAa,EAAKF,KAAK3D,MAAQoD,EAAO5K,OAElB,eACF8G,EADL,CAEE0D,SAAUa,EACVrL,OAAQ4K,EAAO5K,SAInB,KAAKH,EAAiBO,KACpB,YAAoBmK,IAAhBzD,EAAMC,MAA4BD,EACjCA,EAAM2D,qBACYF,IAAnBzD,EAAMd,SAA+Bc,GAErCA,EAAM4D,eAER5D,EAAMC,MAAMuE,MAAM,GAGlBxE,EAAMd,SAASuF,SAGV,eACFzE,EADL,CAEExD,QAAQ,EACRoH,gBAAgB,KAdiB5D,EAgBrC,KAAKjH,EAAiB2L,KACpB,YAAoBjB,IAAhBzD,EAAMC,MAA4BD,OACfyD,IAAnBzD,EAAMd,SAA+Bc,GAEzCA,EAAMC,MAAM8D,OAEL,eACF/D,EADL,CAEExD,QAAQ,KAEZ,KAAKzD,EAAiBsK,MACpB,YAAoBI,IAAhBzD,EAAMC,MAA4BD,OACfyD,IAAnBzD,EAAMd,SAA+Bc,GAEzCA,EAAMd,SAASyF,UAER,eACF3E,EADL,CAEExD,QAAQ,KAGZ,QAEmBsH,EAAO3K,KAExB,OAAO6G,IE3GAwD,EAAgC,CAC3C/G,KAAM,MACNsF,SAAU,CAAC,MAAO,WAwBL6C,EArBuD,WAG/C,IAFrB5E,EAEoB,uDAFKwD,EACzBM,EACoB,uCACpB,OAAQA,EAAO3K,MACb,KAAKH,EAAqBoK,YACxB,OAAO,eACFpD,EADL,CAEEvD,KAAMqH,EAAOrH,MAAQ,KAIzB,QAEmBqH,EAAO3K,KAExB,OAAO6G,IClBE6E,EALKC,YAAgB,CAClC5E,OAAQ2D,EACR1D,WAAYyE,ICKMG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjG,MACvB,2D,YChBOkG,GAAQC,YAAe,CAClCC,QAAS,CACPlM,KAAM,OACNmM,WAAY,CACVC,QAAS,WAEXC,UAAW,CACTC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,cCGdC,GAAQC,YAAYjB,GAE1BkB,IAASzI,OACP,kBAAC,IAAD,CAAUuI,MAAOA,IACf,kBAAC,IAAD,CAAkBV,MAAOA,IACvB,kBAAC,EAAD,QAGJnH,SAASC,eAAe,SFoHpB,kBAAmB+H,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f63229e9.chunk.js","sourcesContent":["export enum PlayerActionType {\n  SET_MUSIC = 'PLAYER/SET_MUSIC',\n  CHANGE_VOLUME = 'PLAYER/CHANGE_VOLUME',\n  PLAY = 'PLAYER/PLAY',\n  STOP = 'PLAYER/STOP',\n  PAUSE = 'PLAYER/PAUSE'\n}\n\nexport interface PlayerAction {\n  type: PlayerActionType;\n  buffer?: AudioBuffer;\n  audioCtx?: AudioContext;\n  music?: AudioBufferSourceNode;\n  volume?: number;\n}\n\nexport interface PlayerState {\n  audioCtx: AudioContext | undefined;\n  music: AudioBufferSourceNode | undefined;\n  analyser: AnalyserNode | undefined;\n  gainNode: GainNode | undefined;\n  isFinishLoading: boolean;\n  isInitiallPaly: boolean; // 初回再生\n  isPlay: boolean;\n  volume: number;\n}\n","import { PlayerActionType, PlayerAction } from './types';\n\nexport const setMusic = (\n  buffer: AudioBuffer,\n  audioCtx: AudioContext\n): PlayerAction => ({\n  buffer,\n  audioCtx,\n  type: PlayerActionType.SET_MUSIC\n});\n\nexport const changeVolume = (volume: number): PlayerAction => ({\n  volume,\n  type: PlayerActionType.CHANGE_VOLUME\n});\n\nexport const play = (): PlayerAction => ({\n  type: PlayerActionType.PLAY\n});\n\nexport const stop = (): PlayerAction => ({\n  type: PlayerActionType.STOP\n});\n\nexport const pause = (): PlayerAction => ({\n  type: PlayerActionType.PAUSE\n});\n","export enum VisualizerActionType {\n  CHANGE_MODE = 'VISUALIZER/CHANGE_MODE'\n}\n\nexport interface VisualizerAction {\n  type: VisualizerActionType;\n  mode?: string;\n  modeList?: string[];\n}\n\nexport interface VisualizerState {\n  mode: string;\n  modeList: string[];\n}\n","export class CanvasUtil {\n  canvas: any;\n\n  ctx: any;\n\n  /**\n   *\n   * @param canvas HTMLCanvasElement\n   */\n  constructor(canvas: any) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n  }\n\n  /**\n   * 棒状のビジュアライザーを描画\n   * @param bufferLength\n   */\n  drawBarVisualizer(bufferLength: Uint8Array) {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.beginPath();\n    this.ctx.fillStyle = '#ff5722';\n    for (let index = 0; index < bufferLength.length; index += 1) {\n      this.ctx.fillRect(\n        index * (this.canvas.width / bufferLength.length),\n        this.canvas.height - bufferLength[index],\n        this.canvas.width / bufferLength.length - 1,\n        bufferLength[index]\n      );\n    }\n    this.ctx.save();\n  }\n\n  /**\n   * 円状のビジュアライザーを描画\n   * @param bufferLength\n   */\n  drawCircleVisualizer(bufferLength: Uint8Array) {\n    const angleStep = (Math.PI * 2) / bufferLength.length;\n\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.beginPath();\n\n    // 円の半径\n    const radius = 200;\n\n    for (let index = 0; index < bufferLength.length; index += 1) {\n      const dist = bufferLength[index] + radius + 1;\n      const angle = angleStep * index + 0.01;\n      const x1 = this.canvas.width / 2 + radius * Math.cos(angle);\n      const y1 = this.canvas.height / 2 + radius * Math.sin(angle);\n      const x = this.canvas.width / 2 + dist * Math.cos(angle);\n      const y = this.canvas.height / 2 + dist * Math.sin(angle);\n      this.ctx.moveTo(x1, y1);\n      this.ctx.lineTo(x, y);\n      this.ctx.lineWidth = 5;\n      this.ctx.strokeStyle = '#ff5722';\n      this.ctx.closePath();\n    }\n    // 現在のパスを輪郭表示する\n    this.ctx.stroke();\n  }\n}\n","import React, { FC, useEffect, useCallback, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport Fade from '@material-ui/core/Fade';\nimport { CanvasUtil } from '../../utils/CanvasUtil';\n\nexport interface VisualizerProps {\n  analyser?: AnalyserNode | undefined;\n  isPlay?: boolean;\n  mode?: string;\n  loadFile?: (file: File | null) => void;\n  setMusic?: (buffer: AudioBuffer, audioCtx: AudioContext) => void;\n  changeVolume: (volume: number) => void;\n  play?: () => void;\n}\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    width: '100%',\n    height: '100vh'\n  },\n  canvasContainer: {\n    position: 'relative',\n    width: '100%',\n    height: '100%'\n  },\n  canvas: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0\n  },\n  playButton: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    margin: 'auto',\n    width: '200px',\n    height: '200px',\n    borderRadius: '100%',\n    fontSize: '2em'\n  },\n  file: {\n    display: 'none'\n  }\n}));\n\nconst Visualizer: FC<VisualizerProps> = ({\n  analyser,\n  isPlay,\n  mode,\n  setMusic = () => undefined,\n  play = () => undefined\n}) => {\n  const classes = useStyles();\n\n  const inputRef = useRef();\n\n  const [canvasUtil, setCanvasUtil] = useState(Object);\n  const [isViewFileButton, setIsViewFileButton] = useState(() => {\n    const initialState = true;\n\n    return initialState;\n  });\n\n  const [isViewCanvas, setIsViewCanvas] = useState(() => {\n    const initialState = false;\n\n    return initialState;\n  });\n\n  /**\n   * ファイル読み込み\n   * @param file\n   */\n  const loadFile = (file: File | null): void => {\n    if (!file) return;\n    if (!file.type.match('audio.*')) return;\n    setIsViewFileButton(false);\n    setIsViewCanvas(true);\n\n    const audioCtx = new AudioContext();\n\n    const fileReader = new FileReader();\n    fileReader.readAsArrayBuffer(file);\n\n    fileReader.onload = (): void => {\n      if (fileReader.result instanceof ArrayBuffer) {\n        audioCtx.decodeAudioData(fileReader.result, buffer => {\n          setMusic(buffer, audioCtx);\n          play();\n        });\n      }\n    };\n  };\n\n  /**\n   * input file のクリックイベントを発火させる\n   */\n  const clickFileInput = (): void => {\n    const fileInput = document.getElementById('fileInput');\n    if (fileInput === null) return;\n    fileInput.click();\n  };\n\n  const render = useCallback((): void => {\n    if (!(analyser instanceof AnalyserNode)) return;\n    const bufferLength = new Uint8Array(analyser.frequencyBinCount);\n    analyser.getByteFrequencyData(bufferLength);\n    switch (mode) {\n      case 'bar':\n        canvasUtil.drawBarVisualizer(bufferLength);\n        break;\n      case 'circle':\n        canvasUtil.drawCircleVisualizer(bufferLength);\n        break;\n      default:\n    }\n\n    requestAnimationFrame(render);\n  }, [analyser, canvasUtil, mode]);\n\n  // 初回マウント時\n  useEffect(() => {\n    const container = document.getElementById('canvasContainer');\n    const canvas: any = document.getElementById('canvas');\n    canvas.width = container?.clientWidth;\n    canvas.height = container?.clientHeight;\n    setCanvasUtil(new CanvasUtil(canvas));\n  }, [inputRef, mode]);\n\n  useEffect(() => {\n    if (isPlay) {\n      requestAnimationFrame(render);\n    }\n  }, [isPlay, render]);\n\n  return (\n    <div className={classes.container}>\n      <Fade in={isViewFileButton} timeout={1000}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.playButton}\n          onClick={clickFileInput}\n        >\n          MUSIC\n          <input\n            id=\"fileInput\"\n            className={classes.file}\n            type=\"file\"\n            onChange={e =>\n              loadFile(e.target.files !== null ? e.target.files[0] : null)\n            }\n          />\n        </Button>\n      </Fade>\n\n      <Fade in={isViewCanvas} timeout={1000}>\n        <div id=\"canvasContainer\" className={classes.canvasContainer}>\n          <canvas id=\"canvas\" className={classes.canvas} />\n        </div>\n      </Fade>\n    </div>\n  );\n};\n\nexport default Visualizer;\n","import { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { play, setMusic, changeVolume } from '../store/player/actions';\r\n\r\nimport Visualizer from '../components/molecules/Visualizer';\r\n\r\ninterface RootState {\r\n  player: {\r\n    music: AudioBufferSourceNode | undefined;\r\n    analyser: AnalyserNode | undefined;\r\n    isPlay: boolean;\r\n  };\r\n  visualizer: {\r\n    mode: string;\r\n  };\r\n}\r\n\r\ninterface StateProps {\r\n  music: AudioBufferSourceNode | undefined;\r\n  analyser: AnalyserNode | undefined;\r\n  isPlay: boolean;\r\n  mode: string;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setMusic: (buffer: AudioBuffer, audioCtx: AudioContext) => void;\r\n  changeVolume: (volume: number) => void;\r\n  play: () => void;\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): StateProps => ({\r\n  music: state.player.music,\r\n  analyser: state.player.analyser,\r\n  isPlay: state.player.isPlay,\r\n  mode: state.visualizer.mode\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\r\n  setMusic: (buffer, audioCtx) => dispatch(setMusic(buffer, audioCtx)),\r\n  changeVolume: volume => dispatch(changeVolume(volume)),\r\n  play: () => dispatch(play())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Visualizer);\r\n","import { VisualizerActionType, VisualizerAction } from './types';\n\nexport const changeMode = (mode: string): VisualizerAction => ({\n  mode,\n  type: VisualizerActionType.CHANGE_MODE\n});\n","import React, { FC } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport VolumeDown from '@material-ui/icons/VolumeDown';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport { isNumber } from 'util';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: 200,\r\n    paddingTop: 7\r\n  }\r\n}));\r\n\r\ninterface VolumeSliderProps {\r\n  changeVolume: (volume: number) => void;\r\n}\r\n\r\nconst VolumeSlider: FC<VolumeSliderProps> = ({ changeVolume }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState<number>(1);\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    if (!isNumber(newValue)) return;\r\n    setValue(newValue);\r\n    changeVolume(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <VolumeDown />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider\r\n            value={value}\r\n            min={0}\r\n            step={0.01}\r\n            max={2}\r\n            onChange={handleChange}\r\n            color=\"secondary\"\r\n            aria-labelledby=\"continuous-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <VolumeUp />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VolumeSlider;\r\n","import React, { FC } from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n\r\ninterface PlayButtonProps {\r\n  handlePlayButton: () => void;\r\n}\r\n\r\nconst PlayButton: FC<PlayButtonProps> = ({ handlePlayButton }) => {\r\n  return (\r\n    <IconButton onClick={handlePlayButton} color=\"inherit\">\r\n      <PlayCircleOutlineIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default PlayButton;\r\n","import React, { FC } from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\n\r\ninterface PauseButtonProps {\r\n  handlePauseButton: () => void;\r\n}\r\n\r\nconst PauseButton: FC<PauseButtonProps> = ({ handlePauseButton }) => {\r\n  return (\r\n    <IconButton onClick={handlePauseButton} color=\"inherit\">\r\n      <PauseCircleOutlineIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default PauseButton;\r\n","import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport VolumeSlider from '../atoms/VolumeSlider';\nimport PlayButton from '../atoms/PlayButton';\nimport PauseButton from '../atoms/PauseButton';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'absolute'\n  }\n}));\n\nexport interface HeaderProps {\n  mode: string;\n  modeList: string[];\n  isPlay?: boolean;\n  changeMode: (mode: string) => void;\n  changeVolume: (volume: number) => void;\n  play?: () => void;\n  pause?: () => void;\n}\n\nconst Header: FC<HeaderProps> = ({\n  mode,\n  modeList,\n  isPlay,\n  changeMode = () => undefined,\n  changeVolume = () => undefined,\n  play = () => undefined,\n  pause = () => undefined\n}) => {\n  const [isOpen, setIsOpen] = useState(() => {\n    const initialState = false;\n\n    return initialState;\n  });\n\n  const classes = useStyles();\n\n  const handleModeButton = (_mode: string) => {\n    changeMode(_mode);\n  };\n\n  const openMune = () => {\n    setIsOpen(true);\n  };\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n\n    setIsOpen(open);\n  };\n\n  /**\n   * @param _mode local\n   * @param selectedMode state mode\n   */\n  const modeButton = (_mode: string, selectedMode: string) => (\n    <div>\n      {_mode === selectedMode ? (\n        <Button key={_mode} onClick={() => handleModeButton(_mode)}>\n          {_mode}\n        </Button>\n      ) : (\n        <Button\n          key={_mode}\n          onClick={() => handleModeButton(_mode)}\n          color=\"inherit\"\n        >\n          {_mode}\n        </Button>\n      )}\n    </div>\n  );\n\n  return (\n    <div className={classes.root} style={{ zIndex: 1100 }}>\n      <Button onClick={openMune}>Menu</Button>\n\n      <Drawer anchor=\"top\" open={isOpen} onClose={toggleDrawer(false)}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={10}>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n              {modeList.map(_mode => (\n                <div key={_mode}>{modeButton(_mode, mode)}</div>\n              ))}\n            </Breadcrumbs>\n          </Grid>\n\n          <Grid item xs={2}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-end\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <Grid item xs={2}>\n                {isPlay ? (\n                  <PauseButton handlePauseButton={pause}></PauseButton>\n                ) : (\n                  <PlayButton handlePlayButton={play}></PlayButton>\n                )}\n              </Grid>\n              <Grid item xs={8}>\n                <VolumeSlider changeVolume={changeVolume} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Header;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { changeMode } from '../store/visualizer/actions';\nimport { changeVolume } from '../store/player/actions';\nimport { play } from '../store/player/actions';\nimport { pause } from '../store/player/actions';\n\nimport Header from '../components/molecules/Header';\n\ninterface RootState {\n  visualizer: {\n    mode: string;\n    modeList: string[];\n  };\n  player: {\n    isPlay: boolean;\n  };\n}\n\ninterface StateProps {\n  mode: string;\n  modeList: string[];\n  isPlay: boolean;\n}\n\ninterface DispatchProps {\n  changeMode: (mode: string) => void;\n  changeVolume: (volume: number) => void;\n  play: () => void;\n  pause: () => void;\n}\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  mode: state.visualizer.mode,\n  modeList: state.visualizer.modeList,\n  isPlay: state.player.isPlay\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  changeMode: mode => dispatch(changeMode(mode)),\n  changeVolume: volume => dispatch(changeVolume(volume)),\n  play: () => dispatch(play()),\n  pause: () => dispatch(pause())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Visualizer from './containers/Visualizer';\nimport Header from './containers/Header';\n\nconst App = () => {\n  return (\n    <div>\n      <CssBaseline />\n      <header>\n        <Header />\n      </header>\n      <main>\n        <Visualizer />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { Reducer } from 'redux';\nimport { PlayerAction, PlayerActionType, PlayerState } from './types';\nimport { FFT_SIZE } from '../../const';\n\nexport const initialState: PlayerState = {\n  audioCtx: undefined,\n  music: undefined,\n  analyser: undefined,\n  gainNode: undefined,\n  isFinishLoading: false,\n  isInitiallPaly: false,\n  isPlay: false,\n  volume: 1\n};\n\nconst playerReducer: Reducer<PlayerState, PlayerAction> = (\n  state: PlayerState = initialState,\n  action: PlayerAction\n): PlayerState => {\n  switch (action.type) {\n    case PlayerActionType.SET_MUSIC: {\n      if (action.audioCtx === undefined) return state;\n      if (action.buffer === undefined) return state;\n      if (state.music !== undefined) {\n        // ファイル再読み込み時停止\n        state.music.stop();\n      }\n\n      // source\n      const source = action.audioCtx.createBufferSource();\n      source.buffer = action.buffer;\n\n      // analyser\n      const analyser = action.audioCtx.createAnalyser();\n      analyser.fftSize = FFT_SIZE;\n      source.connect(analyser);\n      // analyser.connect(action.audioCtx.destination);\n\n      // gainNode\n      const gainNode = action.audioCtx.createGain();\n      // intial value\n      gainNode.gain.value = state.volume;\n      source.connect(gainNode);\n      gainNode.connect(action.audioCtx.destination);\n\n      return {\n        ...state,\n        audioCtx: action.audioCtx,\n        music: source,\n        analyser,\n        gainNode,\n        isPlay: false,\n        isFinishLoading: true,\n        isInitiallPaly: true\n      };\n    }\n\n    case PlayerActionType.CHANGE_VOLUME: {\n      if (state.gainNode === undefined) return state;\n      if (action.volume === undefined) return state;\n\n      const node = state.gainNode;\n      node.gain.value = action.volume;\n\n      return {\n        ...state,\n        gainNode: node,\n        volume: action.volume\n      };\n    }\n\n    case PlayerActionType.PLAY:\n      if (state.music === undefined) return state;\n      if (!state.isFinishLoading) return state;\n      if (state.audioCtx === undefined) return state;\n\n      if (state.isInitiallPaly) {\n        // 初回再生時は頭から再生\n        state.music.start(0);\n      } else {\n        // 途中から再生\n        state.audioCtx.resume();\n      }\n\n      return {\n        ...state,\n        isPlay: true,\n        isInitiallPaly: false\n      };\n    case PlayerActionType.STOP:\n      if (state.music === undefined) return state;\n      if (state.audioCtx === undefined) return state;\n\n      state.music.stop();\n\n      return {\n        ...state,\n        isPlay: false\n      };\n    case PlayerActionType.PAUSE:\n      if (state.music === undefined) return state;\n      if (state.audioCtx === undefined) return state;\n\n      state.audioCtx.suspend();\n\n      return {\n        ...state,\n        isPlay: false\n      };\n\n    default: {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const _: never = action.type;\n\n      return state;\n    }\n  }\n};\n\nexport default playerReducer;\n","export const FFT_SIZE = 256;\n","import { Reducer } from 'redux';\nimport {\n  VisualizerAction,\n  VisualizerActionType,\n  VisualizerState\n} from './types';\n\nexport const initialState: VisualizerState = {\n  mode: 'bar',\n  modeList: ['bar', 'circle']\n};\n\nconst visualizerReducer: Reducer<VisualizerState, VisualizerAction> = (\n  state: VisualizerState = initialState,\n  action: VisualizerAction\n): VisualizerState => {\n  switch (action.type) {\n    case VisualizerActionType.CHANGE_MODE: {\n      return {\n        ...state,\n        mode: action.mode || ''\n      };\n    }\n\n    default: {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const _: never = action.type;\n\n      return state;\n    }\n  }\n};\n\nexport default visualizerReducer;\n","import { combineReducers } from 'redux';\n\nimport playerReducer from './player/reducers';\nimport visualizerReducer from './visualizer/reducers';\n\nconst rootReducer = combineReducers({\n  player: playerReducer,\n  visualizer: visualizerReducer\n});\n\nexport default rootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    background: {\r\n      default: '#222222'\r\n    },\r\n    secondary: {\r\n      light: '#ff8a50',\r\n      main: '#ff5722',\r\n      dark: '#c41c00',\r\n      contrastText: '#000000'\r\n    }\r\n  }\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './index.css';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\n\nimport rootReducer from './store/index';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { theme } from './materialui/theme';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}